{"version":3,"sources":["pages/Main/index.tsx","logo.svg","assest/images/rock.jpg","App.js","reportWebVitals.js","index.js"],"names":["routerGoalStatusEnum","theme","blueGrey","createMuiTheme","palette","primary","Main","props","handleNameChange","event","setState","selectName","target","value","handleRouterNumChange","selectRouterNum","handleStatusChange","selectRouterStatus","handleConfirmClick","state","userAccount","findAccount","_","find","account","name","isEmpty","findRouter","routerGoal","number","undefined","Number","status","NONE","startAtt","ZONE_1","zone1Att","ZONE_2","TOP","zone2Att","topCount","zone2Count","zone1Count","each","console","log","alert","test","routerCount","initAccountRouterGoal","this","initAccount","initRouterGoal","initRouterGoalModel","i","push","classes","className","src","rock","FormControl","variant","formControl","InputLabel","id","Select","labelId","onChange","map","MenuItem","range","ThemeProvider","Button","color","onClick","Component","withStyles","margin","spacing","minWidth","selectEmpty","marginTop","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c89bda8.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport rock from \"../../assest/images/rock.jpg\"\r\nimport _ from 'lodash';\r\nimport './style.scss'\r\nimport { createMuiTheme, ThemeProvider, withStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport blueGrey from '@material-ui/core/colors/blueGrey';\r\n\r\nconst blueGreycolor = blueGrey[800]\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: blueGrey,\r\n  },\r\n});\r\n\r\nconst useStyles = (theme: any) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 180,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n});\r\n\r\nclass Main extends Component<any, any> {\r\n  constructor(props: any) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      userAccount: [],\r\n      test: true,\r\n      routerCount: 8,\r\n      initAccountRouterGoal: [],\r\n      selectName: '百八',\r\n      selectRouterNum: 1,\r\n      selectRouterStatus: '1',\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.initAccount();\r\n  }\r\n\r\n  initAccount() {\r\n    this.initRouterGoal();\r\n    // this.initUserAccount();\r\n  }\r\n\r\n  initRouterGoal() {\r\n    const { routerCount } = this.state\r\n    let initRouterGoalModel: routerGoalModel[] = [];\r\n    for (let i = 0; i < routerCount; i++) {\r\n      initRouterGoalModel.push({ number: i + 1, status: routerGoalStatusEnum.NONE })\r\n    }\r\n    let initAccountRouterGoal: userAccountModel = { routerGoal: initRouterGoalModel, topCount: 0, zone2Count: 0, zone1Count: 0, zone1Att: 0, zone2Att: 0, startAtt: 0 }\r\n    let userAccount: userAccountModel[] = [];\r\n    userAccount.push({ name: '百八', ...initAccountRouterGoal });\r\n    userAccount.push({ name: '史蛋', ...initAccountRouterGoal });\r\n    userAccount.push({ name: '米踢', ...initAccountRouterGoal });\r\n    userAccount.push({ name: '胡真', ...initAccountRouterGoal });\r\n    userAccount.push({ name: 'KAI B', ...initAccountRouterGoal });\r\n    userAccount.push({ name: '孫蝸', ...initAccountRouterGoal });\r\n    userAccount.push({ name: 'Yolin', ...initAccountRouterGoal });\r\n    this.setState({ userAccount: userAccount })\r\n    this.setState({ initAccountRouterGoal: initAccountRouterGoal })\r\n  }\r\n\r\n  initUserAccount() {\r\n    const { initAccountRouterGoal } = this.state;\r\n    let userAccount: userAccountModel[] = [];\r\n    userAccount.push({ name: '百八', ...initAccountRouterGoal });\r\n    userAccount.push({ name: '史蛋', ...initAccountRouterGoal });\r\n    userAccount.push({ name: '米踢', ...initAccountRouterGoal });\r\n    userAccount.push({ name: '胡真', ...initAccountRouterGoal });\r\n    userAccount.push({ name: 'KAI B', ...initAccountRouterGoal });\r\n    userAccount.push({ name: '孫蝸', ...initAccountRouterGoal });\r\n    userAccount.push({ name: 'Yolin', ...initAccountRouterGoal });\r\n    this.setState({ userAccount: userAccount })\r\n  }\r\n\r\n  //切換 focusID 讓畫面Focus 當前 focusUnitId 的單位\r\n  handleNameChange = (event: any) => {\r\n    this.setState({ selectName: event.target.value })\r\n  };\r\n\r\n  handleRouterNumChange = (event: any) => {\r\n    this.setState({ selectRouterNum: event.target.value })\r\n  };\r\n\r\n  handleStatusChange = (event: any) => {\r\n    this.setState({ selectRouterStatus: event.target.value })\r\n  };\r\n\r\n  handleConfirmClick = () => {\r\n    const { userAccount, selectName, selectRouterNum, selectRouterStatus } = this.state\r\n    let findAccount: userAccountModel = _.find(userAccount, account => (account.name === selectName));\r\n    if (!_.isEmpty(findAccount)) {\r\n      let findRouter = _.find(findAccount.routerGoal, routerGoal => (routerGoal.number === selectRouterNum));\r\n      if (findRouter !== undefined && Number(selectRouterStatus) > Number(findRouter.status)) {\r\n        findRouter.status = selectRouterStatus;\r\n      }\r\n      switch (selectRouterStatus) {\r\n        case routerGoalStatusEnum.NONE:\r\n          findAccount.startAtt += 1;\r\n          break;\r\n        case routerGoalStatusEnum.ZONE_1:\r\n          findAccount.startAtt += 1;\r\n          findAccount.zone1Att += 1;\r\n          break;\r\n        case routerGoalStatusEnum.ZONE_2:\r\n          findAccount.startAtt += 1;\r\n          findAccount.zone1Att += 1;\r\n          findAccount.zone2Att += 1;\r\n          break;\r\n        case routerGoalStatusEnum.TOP:\r\n          findAccount.startAtt += 1;\r\n          findAccount.zone1Att += 1;\r\n          findAccount.zone2Att += 1;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      //重新計算成員的攀點數\r\n      let topCount = 0;\r\n      let zone2Count = 0;\r\n      let zone1Count = 0;\r\n      _.each(findAccount.routerGoal, routerGoal => {\r\n        switch (routerGoal.status) {\r\n          case routerGoalStatusEnum.ZONE_1:\r\n            zone1Count += 1;\r\n            break;\r\n          case routerGoalStatusEnum.ZONE_2:\r\n            zone2Count += 1;\r\n            break;\r\n          case routerGoalStatusEnum.TOP:\r\n            topCount += 1;\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n      console.log(topCount, zone2Count, zone1Count);\r\n      findAccount.topCount = topCount;\r\n      findAccount.zone2Count = zone2Count;\r\n      findAccount.zone1Count = zone1Count;\r\n      console.log(findAccount);\r\n      console.log(userAccount);\r\n      this.setState({ userAccount: userAccount });\r\n\r\n      alert('成功');\r\n    }\r\n  }\r\n\r\n  //計算是誰贏\r\n  setWhoWin() {\r\n    const { userAccount } = this.state\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { userAccount, selectName, routerCount, selectRouterNum, selectRouterStatus } = this.state\r\n    return (\r\n      <div className=\"rock-bg\">\r\n        <img src={rock}></img>\r\n        <div>\r\n          <FormControl variant=\"filled\" className={classes.formControl}>\r\n            <InputLabel id=\"select-anme\">人員</InputLabel>\r\n            <Select\r\n              labelId=\"select-anme\"\r\n              id=\"select-anme\"\r\n              value={selectName}\r\n              onChange={this.handleNameChange}\r\n            >\r\n              {\r\n                _.map(userAccount, account => (\r\n                  <MenuItem value={account.name}>{account.name}</MenuItem>\r\n                ))\r\n              }\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n        <div>\r\n          <FormControl variant=\"filled\" className={classes.formControl}>\r\n            <InputLabel id=\"select-router\">路線</InputLabel>\r\n            <Select\r\n              labelId=\"select-router\"\r\n              id=\"select-router\"\r\n              value={selectRouterNum}\r\n              onChange={this.handleRouterNumChange}\r\n            >\r\n              {\r\n                _.map(_.range(1, routerCount + 1), number => (\r\n                  <MenuItem value={number}>路線{number}</MenuItem>\r\n                ))\r\n              }\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n        <div>\r\n          <FormControl variant=\"filled\" className={classes.formControl}>\r\n            <InputLabel id=\"select-anme\">成績</InputLabel>\r\n            <Select\r\n              labelId=\"select-anme\"\r\n              id=\"select-anme\"\r\n              value={selectRouterStatus}\r\n              onChange={this.handleStatusChange}\r\n            >\r\n              <MenuItem value=\"4\">TOP</MenuItem>\r\n              <MenuItem value=\"3\">ZONE_2</MenuItem>\r\n              <MenuItem value=\"2\">ZONE_1</MenuItem>\r\n              <MenuItem value=\"1\">NONE</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n        <ThemeProvider theme={theme}>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={this.handleConfirmClick}>\r\n            送出\r\n          </Button>\r\n        </ThemeProvider>\r\n        <div className=\"left\">\r\n          <span className=\"md-title w-70\">名子</span>\r\n          <span className=\"w-35\">T</span>\r\n          <span className=\"w-35\">Z2</span>\r\n          <span className=\"w-35\">Z1</span>\r\n          <span className=\"w-35\">Z2t</span>\r\n          <span className=\"w-35\">Z1t</span>\r\n          <span className=\"w-35\">Stt</span>\r\n        </div>\r\n        <div className=\"left\">\r\n          {\r\n            _.map(userAccount, account => (\r\n              <div>\r\n                <span className=\"md-title  w-70\">{account.name}</span>\r\n                <span className=\"w-35\">{account.topCount} </span>\r\n                <span className=\"w-35\">{account.zone2Count} </span>\r\n                <span className=\"w-35\">{account.zone1Count} </span>\r\n                <span className=\"w-35\">{account.zone2Att}  </span>\r\n                <span className=\"w-35\">{account.zone1Att}  </span>\r\n                <span className=\"w-35\">{account.startAtt}  </span>\r\n              </div>\r\n            ))\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(Main)\r\n\r\nexport interface userAccountModel {\r\n  name?: string;\r\n  routerGoal: routerGoalModel[];\r\n  topCount: number;\r\n  zone2Count: number;\r\n  zone1Count: number;\r\n  zone1Att: number;\r\n  zone2Att: number;\r\n  startAtt: number;\r\n}\r\n\r\nexport interface routerGoalModel {\r\n  number: number;\r\n  status: routerGoalStatusEnum;\r\n}\r\n\r\nexport enum routerGoalStatusEnum {\r\n  TOP = '4',\r\n  ZONE_2 = '3',\r\n  ZONE_1 = '2',\r\n  FAIL = '0',\r\n  NONE = '1',\r\n}","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/rock.66f45c61.jpg\";","import logo from './logo.svg';\nimport './App.css';\nimport Main from './pages/Main/index'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}