{"version":3,"sources":["logo.svg","assest/images/rock.jpg","pages/Index/index.tsx","utility/enum/router-level.enum.ts","pages/SetPerson/index.tsx","utility/lib/common.ts","pages/Main/index.tsx","pages/SetRoute/index.tsx","pages/OptionStartGoal/index.tsx","pages/OptionStart/index.tsx","App.js","reportWebVitals.js","index.js"],"names":["blueGreycolor","blueGrey","startTheme","createMuiTheme","palette","primary","main","grey","secondary","Index","props","state","routerInfos","routerGoalAccount","ThemeProvider","theme","to","Button","className","variant","color","Component","RouterLevelEnum","SetPerson","routerGoalAccounts","addName","sessionStorage","getItem","JSON","parse","this","setState","initUserAccount","userAccount","initAccountRouterGoal","topCount","zone2Count","zone1Count","zone1Att","zone2Att","startAtt","push","name","_","cloneDeep","initRouteGoalAccount","index","event","target","value","console","log","filter","account","setItem","stringify","isEmpty","TextField","id","placeholder","onChange","handleSearchNameChange","style","background","green","onClick","addAccount","TransitionGroup","Object","keys","map","itemKey","CSSTransition","classNames","timeout","enter","exit","required","label","handleNameChange","handleDeleteAccount","handleNextRoute","routerGoalStatusEnum","level","V0","route","addRoute","FormControl","InputLabel","Select","labelId","handleChangeLevel","MenuItem","handleRouteNameChange","handleDeleteRoute","OptionStartGoal","selectName","handleRouterNumChange","selectRouterNum","handleStatusChange","selectRouterStatus","handleConfirmClick","findAccount","find","findRouter","routerGoal","number","undefined","Number","status","NONE","ZONE_1","ZONE_2","TOP","each","setWhoWin","test","routerCount","initAccount","initRouterGoal","initRouterGoalModel","i","orderAccount","orderBy","classes","formControl","range","withStyles","margin","spacing","minWidth","selectEmpty","marginTop","routeInfos","routeInfo","success","light","dark","OptionStart","location","path","match","AnimationApp","useLocation","unmountOnExit","exact","component","Main","key","App","basename","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02e781aa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/rock.66f45c61.jpg\";","import React, { Component, Fragment } from 'react';\r\nimport _ from 'lodash';\r\nimport './style.scss'\r\nimport { createMuiTheme, ThemeProvider, withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport blueGrey from '@material-ui/core/colors/blueGrey';\r\nimport grey from '@material-ui/core/colors/grey';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n} from \"react-router-dom\";\r\n\r\nconst blueGreycolor = blueGrey[800]\r\n\r\nconst startTheme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: grey[50],\r\n    },\r\n    secondary: {\r\n      main: blueGreycolor,\r\n    },\r\n  },\r\n});\r\n\r\nconst useStyles = (theme: any) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 180,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n});\r\n\r\nexport class Index extends Component<any, any> {\r\n  constructor(props: any) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      routerInfos: [],\r\n      routerGoalAccount: [],\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>抱石大亂鬥記分板</h1>\r\n        <h4>歡迎使用</h4>\r\n        <ThemeProvider theme={startTheme}>\r\n          <Link to=\"/quikStart\">\r\n            <Button className=\"mb-2\" variant=\"contained\" color=\"secondary\">\r\n              快速開始 &gt;\r\n            </Button>\r\n          </Link>\r\n          <br></br>\r\n          <Link to=\"/OptionStart/settingPerson\">\r\n            <Button variant=\"contained\" color=\"primary\">\r\n              開始 &gt;\r\n            </Button>\r\n          </Link>\r\n        </ThemeProvider>\r\n      </div>\r\n    )\r\n  }\r\n}","export enum RouterLevelEnum {\r\n  V0 = 0,\r\n  V1 = 1,\r\n  V2 = 2,\r\n  V3 = 3,\r\n  V4 = 4,\r\n  V5 = 5,\r\n  V6 = 6,\r\n}","import React, { Component, Fragment } from 'react';\r\nimport _ from 'lodash';\r\nimport './style.scss'\r\nimport Button from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {\r\n  Link,\r\n} from \"react-router-dom\";\r\nimport { initRouteGoalAccount, initRouteGoal } from '../../utility/lib/common';\r\nimport { TextField } from '@material-ui/core';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport { green } from '@material-ui/core/colors';\r\n\r\nexport default class SetPerson extends Component<any, any> {\r\n  constructor(props: any) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      routerInfos: [],\r\n      routerGoalAccounts: [],\r\n      addName: '',\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let routerGoalAccountsSession = sessionStorage.getItem('routerGoalAccounts')\r\n    if(typeof routerGoalAccountsSession === 'string') {\r\n      let routerGoalAccounts =  JSON.parse(sessionStorage.getItem('routerGoalAccounts') || '{}')\r\n      this.setState({ routerGoalAccounts: routerGoalAccounts })\r\n    }\r\n    else {\r\n      this.initUserAccount();\r\n    }\r\n  }\r\n\r\n  initUserAccount() {\r\n    let userAccount = initRouteGoalAccount();\r\n    this.setState({ routerGoalAccounts: userAccount });\r\n  }\r\n\r\n  handleNameChange(index: string, event: any) {\r\n    const { routerGoalAccounts } = this.state\r\n    routerGoalAccounts[index].name = event.target.value\r\n    this.setState({ routerGoalAccounts: routerGoalAccounts })\r\n  }\r\n\r\n  handleDeleteAccount(index: string) {\r\n    const { routerGoalAccounts } = this.state\r\n    delete routerGoalAccounts[index];\r\n    // routerGoalAccounts.splice(index, 1);\r\n    this.setState({ routerGoalAccounts: routerGoalAccounts })\r\n  }\r\n\r\n  handleSearchNameChange(name: string) {\r\n    this.setState({ addName: name })\r\n  }\r\n\r\n  addAccount() {\r\n    const { addName, routerGoalAccounts } = this.state;\r\n    routerGoalAccounts.push({ name: addName, ..._.cloneDeep(initRouteGoal()) });\r\n    this.setState({ routerGoalAccounts: routerGoalAccounts })\r\n  }\r\n\r\n  handleNextRoute() {\r\n    const { routerGoalAccounts } = this.state;\r\n    console.log(_.filter(routerGoalAccounts, account => (account !== null)))\r\n    sessionStorage.setItem('routerGoalAccounts', JSON.stringify(_.filter(routerGoalAccounts, account => (!_.isEmpty(account)))))\r\n  }\r\n\r\n  render() {\r\n    const { routerGoalAccounts, addName } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <h2>設定人員</h2>\r\n        <div className=\"rock-person__new-person\">\r\n          <TextField\r\n            id=\"new-person\"\r\n            placeholder=\"新增人員名稱\"\r\n            variant=\"outlined\"\r\n            value={addName}\r\n            className=\"rock-person__new-person__input\"\r\n            onChange={(event) => { this.handleSearchNameChange(event.target.value) }}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            style={{ color: 'white', background: green[500] }}\r\n            onClick={() => { this.addAccount() }}\r\n          >新增</Button>\r\n        </div>\r\n        <TransitionGroup className=\"rock-person__list\">\r\n          {\r\n            Object.keys(routerGoalAccounts).map(itemKey => {\r\n              return <CSSTransition\r\n                key={itemKey}\r\n                classNames=\"move\"\r\n                timeout={{ enter: 300, exit: 300 }}\r\n              >\r\n                <div className=\"rock-person__item\">\r\n                  <TextField\r\n                    required\r\n                    key={itemKey}\r\n                    id={`name-input-${itemKey}`}\r\n                    value={routerGoalAccounts[itemKey].name}\r\n                    label=\"名稱\"\r\n                    onChange={(event) => { this.handleNameChange(itemKey, event) }}\r\n                  />\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className='ic-btn'\r\n                    onClick={() => { this.handleDeleteAccount(itemKey) }}\r\n                  ><DeleteIcon /></Button>\r\n                </div>\r\n              </CSSTransition>\r\n            }\r\n            )\r\n          }\r\n        </TransitionGroup>\r\n        <Link to=\"/OptionStart/settingRoute\" onClick={() => this.handleNextRoute()}>\r\n          <Button variant=\"contained\" color=\"primary\">\r\n            下一步 &gt;\r\n          </Button>\r\n        </Link>\r\n      </Fragment>\r\n    )\r\n  }\r\n}","import _ from \"lodash\";\r\nimport { userAccountModel } from \"../../pages/Main\";\r\n\r\nexport function initRouteGoalAccount() {\r\n  let initAccountRouterGoal: userAccountModel = { topCount: 0, zone2Count: 0, zone1Count: 0, zone1Att: 0, zone2Att: 0, startAtt: 0 }\r\n  let userAccount: userAccountModel[] = [];\r\n  userAccount.push({ name: '百八', ..._.cloneDeep(initAccountRouterGoal) });\r\n  userAccount.push({ name: '史蛋', ..._.cloneDeep(initAccountRouterGoal) });\r\n  userAccount.push({ name: '米踢', ..._.cloneDeep(initAccountRouterGoal) });\r\n  userAccount.push({ name: '胡真', ..._.cloneDeep(initAccountRouterGoal) });\r\n  userAccount.push({ name: 'KAI B', ..._.cloneDeep(initAccountRouterGoal) });\r\n  userAccount.push({ name: '孫蝸', ..._.cloneDeep(initAccountRouterGoal) });\r\n  userAccount.push({ name: 'Yolin', ..._.cloneDeep(initAccountRouterGoal) });\r\n  userAccount.push({ name: 'ED', ..._.cloneDeep(initAccountRouterGoal) });\r\n  return userAccount;\r\n}\r\n\r\nexport function initRouteGoal() {\r\n  let initAccountRouterGoal: userAccountModel = { topCount: 0, zone2Count: 0, zone1Count: 0, zone1Att: 0, zone2Att: 0, startAtt: 0 }\r\n  return initAccountRouterGoal\r\n}","import React, { Component, Fragment } from 'react';\r\nimport rock from \"../../assest/images/rock.jpg\"\r\nimport _ from 'lodash';\r\nimport './style.scss'\r\nimport { createMuiTheme, ThemeProvider, withStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport blueGrey from '@material-ui/core/colors/blueGrey';\r\n\r\nconst blueGreycolor = blueGrey[800]\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: blueGrey,\r\n  },\r\n});\r\n\r\nconst useStyles = (theme: any) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 180,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n});\r\n\r\nclass OptionStartGoal extends Component<any, any> {\r\n  constructor(props: any) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      userAccount: [],\r\n      test: true,\r\n      routerCount: 8,\r\n      initAccountRouterGoal: [],\r\n      selectName: '百八',\r\n      selectRouterNum: 1,\r\n      selectRouterStatus: '1',\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.initAccount();\r\n  }\r\n\r\n  initAccount() {\r\n    this.initRouterGoal();\r\n  }\r\n\r\n  // 初始化所有選手的路線資訊\r\n  initRouterGoal() {\r\n    const { routerCount } = this.state\r\n    let initRouterGoalModel: routerGoalModel[] = [];\r\n    for (let i = 0; i < routerCount; i++) {\r\n      initRouterGoalModel.push({ number: i + 1, status: routerGoalStatusEnum.NONE })\r\n    }\r\n    let initAccountRouterGoal: userAccountModel = { routerGoal: _.cloneDeep(initRouterGoalModel), topCount: 0, zone2Count: 0, zone1Count: 0, zone1Att: 0, zone2Att: 0, startAtt: 0 }\r\n    let userAccount: userAccountModel[] = [];\r\n    userAccount.push({ name: '百八', ..._.cloneDeep(initAccountRouterGoal) });\r\n    userAccount.push({ name: '史蛋', ..._.cloneDeep(initAccountRouterGoal) });\r\n    userAccount.push({ name: '米踢', ..._.cloneDeep(initAccountRouterGoal) });\r\n    userAccount.push({ name: '胡真', ..._.cloneDeep(initAccountRouterGoal) });\r\n    userAccount.push({ name: 'KAI B', ..._.cloneDeep(initAccountRouterGoal) });\r\n    userAccount.push({ name: '孫蝸', ..._.cloneDeep(initAccountRouterGoal) });\r\n    userAccount.push({ name: 'Yolin', ..._.cloneDeep(initAccountRouterGoal) });\r\n    userAccount.push({ name: 'ED', ..._.cloneDeep(initAccountRouterGoal) });\r\n    this.setState({ userAccount: userAccount })\r\n    this.setState({ initAccountRouterGoal: initAccountRouterGoal })\r\n  }\r\n\r\n  initUserAccount() {\r\n    const { initAccountRouterGoal } = this.state;\r\n    let userAccount: userAccountModel[] = [];\r\n    userAccount.push({ name: '百八', ...initAccountRouterGoal });\r\n    userAccount.push({ name: '史蛋', ...initAccountRouterGoal });\r\n    userAccount.push({ name: '米踢', ...initAccountRouterGoal });\r\n    userAccount.push({ name: '胡真', ...initAccountRouterGoal });\r\n    userAccount.push({ name: 'KAI B', ...initAccountRouterGoal });\r\n    userAccount.push({ name: '孫蝸', ...initAccountRouterGoal });\r\n    userAccount.push({ name: 'Yolin', ...initAccountRouterGoal });\r\n    this.setState({ userAccount: userAccount })\r\n  }\r\n\r\n  //切換 focusID 讓畫面Focus 當前 focusUnitId 的單位\r\n  handleNameChange = (event: any) => {\r\n    this.setState({ selectName: event.target.value })\r\n  };\r\n\r\n  handleRouterNumChange = (event: any) => {\r\n    this.setState({ selectRouterNum: event.target.value })\r\n  };\r\n\r\n  handleStatusChange = (event: any) => {\r\n    this.setState({ selectRouterStatus: event.target.value })\r\n  };\r\n\r\n  handleConfirmClick = () => {\r\n    const { userAccount, selectName, selectRouterNum, selectRouterStatus } = this.state\r\n    let findAccount: userAccountModel = _.find(userAccount, account => (account.name === selectName));\r\n    if (!_.isEmpty(findAccount)) {\r\n      let findRouter = _.find(findAccount.routerGoal, routerGoal => (routerGoal.number === selectRouterNum));\r\n      if (findRouter !== undefined && Number(selectRouterStatus) > Number(findRouter.status)) {\r\n        findRouter.status = selectRouterStatus;\r\n      }\r\n      switch (selectRouterStatus) {\r\n        case routerGoalStatusEnum.NONE:\r\n          findAccount.startAtt += 1;\r\n          break;\r\n        case routerGoalStatusEnum.ZONE_1:\r\n          findAccount.startAtt += 1;\r\n          findAccount.zone1Att += 1;\r\n          break;\r\n        case routerGoalStatusEnum.ZONE_2:\r\n          findAccount.startAtt += 1;\r\n          findAccount.zone1Att += 1;\r\n          findAccount.zone2Att += 1;\r\n          break;\r\n        case routerGoalStatusEnum.TOP:\r\n          findAccount.startAtt += 1;\r\n          findAccount.zone1Att += 1;\r\n          findAccount.zone2Att += 1;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      //重新計算成員的攀點數\r\n      let topCount = 0;\r\n      let zone2Count = 0;\r\n      let zone1Count = 0;\r\n      _.each(findAccount.routerGoal, routerGoal => {\r\n        switch (routerGoal.status) {\r\n          case routerGoalStatusEnum.ZONE_1:\r\n            zone1Count += 1;\r\n            break;\r\n          case routerGoalStatusEnum.ZONE_2:\r\n            zone2Count += 1;\r\n            break;\r\n          case routerGoalStatusEnum.TOP:\r\n            topCount += 1;\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n      console.log(topCount, zone2Count, zone1Count);\r\n      findAccount.topCount = topCount;\r\n      findAccount.zone2Count = zone2Count;\r\n      findAccount.zone1Count = zone1Count;\r\n      console.log(findAccount);\r\n      console.log(userAccount);\r\n      this.setState({ userAccount: userAccount });\r\n      this.setWhoWin();\r\n      // alert('成功');\r\n    }\r\n  }\r\n\r\n  //計算是誰贏\r\n  setWhoWin() {\r\n    const { userAccount } = this.state\r\n    let orderAccount = _.orderBy(userAccount, ['topCount', 'zone2Count', 'zone1Count'], ['desc', 'desc', 'desc'])\r\n    this.setState({ userAccount: orderAccount });\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { userAccount, selectName, routerCount, selectRouterNum, selectRouterStatus } = this.state\r\n    return (\r\n      <div>\r\n        <div>\r\n          <FormControl variant=\"filled\" className={classes.formControl}>\r\n            <InputLabel id=\"select-anme\">人員</InputLabel>\r\n            <Select\r\n              labelId=\"select-anme\"\r\n              id=\"select-anme\"\r\n              value={selectName}\r\n              onChange={this.handleNameChange}\r\n            >\r\n              {\r\n                _.map(userAccount, account => (\r\n                  <MenuItem value={account.name}>{account.name}</MenuItem>\r\n                ))\r\n              }\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n        <div>\r\n          <FormControl variant=\"filled\" className={classes.formControl}>\r\n            <InputLabel id=\"select-router\">路線</InputLabel>\r\n            <Select\r\n              labelId=\"select-router\"\r\n              id=\"select-router\"\r\n              value={selectRouterNum}\r\n              onChange={this.handleRouterNumChange}\r\n            >\r\n              {\r\n                _.map(_.range(1, routerCount + 1), number => (\r\n                  <MenuItem value={number}>路線{number}</MenuItem>\r\n                ))\r\n              }\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n        <div>\r\n          <FormControl variant=\"filled\" className={classes.formControl}>\r\n            <InputLabel id=\"select-anme\">成績</InputLabel>\r\n            <Select\r\n              labelId=\"select-anme\"\r\n              id=\"select-anme\"\r\n              value={selectRouterStatus}\r\n              onChange={this.handleStatusChange}\r\n            >\r\n              <MenuItem value=\"4\">TOP</MenuItem>\r\n              <MenuItem value=\"3\">ZONE_2</MenuItem>\r\n              <MenuItem value=\"2\">ZONE_1</MenuItem>\r\n              <MenuItem value=\"1\">失敗</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n        <ThemeProvider theme={theme}>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={this.handleConfirmClick}>\r\n            送出\r\n          </Button>\r\n        </ThemeProvider>\r\n        <div className=\"left\">\r\n          <span className=\"md-title w-70\">名子</span>\r\n          <span className=\"w-35\">TOP</span>\r\n          <span className=\"w-35\">Z2</span>\r\n          <span className=\"w-35\">Z1</span>\r\n          <span className=\"w-35\">Z2t</span>\r\n          <span className=\"w-35\">Z1t</span>\r\n          <span className=\"w-35\">次數</span>\r\n        </div>\r\n        <div className=\"left\">\r\n          {\r\n            _.map(userAccount, account => (\r\n              <div>\r\n                <span className=\"md-title  w-70\">{account.name}</span>\r\n                <span className=\"w-35\">{account.topCount} </span>\r\n                <span className=\"w-35\">{account.zone2Count} </span>\r\n                <span className=\"w-35\">{account.zone1Count} </span>\r\n                <span className=\"w-35\">{account.zone2Att}  </span>\r\n                <span className=\"w-35\">{account.zone1Att}  </span>\r\n                <span className=\"w-35\">{account.startAtt}  </span>\r\n              </div>\r\n            ))\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(OptionStartGoal)\r\n\r\nexport interface userAccountModel {\r\n  name?: string;\r\n  routerGoal?: routerGoalModel[];\r\n  topCount: number;\r\n  zone2Count: number;\r\n  zone1Count: number;\r\n  zone1Att: number;\r\n  zone2Att: number;\r\n  startAtt: number; //總攀爬次數\r\n}\r\n\r\nexport interface routerGoalModel {\r\n  number: number;\r\n  name?: string;\r\n  status: routerGoalStatusEnum;\r\n}\r\n\r\nexport enum routerGoalStatusEnum {\r\n  TOP = '4',\r\n  ZONE_2 = '3',\r\n  ZONE_1 = '2',\r\n  FAIL = '0',\r\n  NONE = '1',\r\n}","import React, { Component, Fragment } from 'react';\r\nimport _ from 'lodash';\r\nimport './style.scss'\r\nimport Button from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {\r\n  Link,\r\n} from \"react-router-dom\";\r\nimport { initRouteGoalAccount, initRouteGoal } from '../../utility/lib/common';\r\nimport { colors, FormControl, InputLabel, MenuItem, Select, TextField } from '@material-ui/core';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { RouterLevelEnum } from '../../utility/enum/router-level.enum';\r\n\r\nexport default class SetPerson extends Component<any, any> {\r\n  constructor(props: any) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      routerInfos: [],\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let routerInfosSession = sessionStorage.getItem('routerInfos')\r\n    if(typeof routerInfosSession === 'string') {\r\n      let routerInfos =  JSON.parse(sessionStorage.getItem('routerInfos') || '{}')\r\n      this.setState({ routerInfos: routerInfos })\r\n    }\r\n  }\r\n\r\n  addRoute() {\r\n    const { routerInfos } = this.state\r\n    routerInfos.push({ level: RouterLevelEnum.V0, color: '' })\r\n    this.setState({ routerInfos: routerInfos })\r\n  }\r\n\r\n  handleRouteNameChange(index: string, color: string) {\r\n    const { routerInfos } = this.state\r\n    routerInfos[index].color = color\r\n    this.setState({ routerInfos: routerInfos })\r\n  }\r\n\r\n  handleDeleteRoute(index: string) {\r\n    const { routerInfos } = this.state\r\n    delete routerInfos[index]\r\n    this.setState({ routerInfos: routerInfos })\r\n  }\r\n\r\n  handleNextRoute() {\r\n    const { routerInfos } = this.state\r\n    sessionStorage.setItem('routerInfos', JSON.stringify(_.filter(routerInfos, route => (!_.isEmpty(route)))))\r\n  }\r\n\r\n  handleChangeLevel(index: string, level: any) {\r\n    const { routerInfos } = this.state\r\n    routerInfos[index].level = level\r\n    this.setState({ routerInfos: routerInfos })\r\n  }\r\n\r\n  render() {\r\n    const { routerInfos, addName } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <h2>設定路線</h2>\r\n        <div className=\"rock-person__new-person\">\r\n          <Button\r\n            variant=\"contained\"\r\n            style={{ color: 'white', background: green[500] }}\r\n            onClick={() => { this.addRoute() }}\r\n          >新增路線</Button>\r\n        </div>\r\n        <TransitionGroup className=\"rock-person__list\">\r\n          {\r\n            Object.keys(routerInfos).map(itemKey => {\r\n              return <CSSTransition\r\n                key={itemKey}\r\n                classNames=\"move\"\r\n                timeout={{ enter: 300, exit: 300 }}\r\n              >\r\n                <div className=\"rock-person__item\">\r\n                  <FormControl variant=\"filled\">\r\n                    <InputLabel id=\"select-anme\">成績</InputLabel>\r\n                    <Select\r\n                      labelId=\"select-anme\"\r\n                      id=\"select-anme\"\r\n                      value={routerInfos[itemKey].level}\r\n                      onChange={(event) => {this.handleChangeLevel(itemKey, event.target.value)}}\r\n                    >\r\n                      <MenuItem value=\"0\">V0</MenuItem>\r\n                      <MenuItem value=\"1\">V1</MenuItem>\r\n                      <MenuItem value=\"2\">V2</MenuItem>\r\n                      <MenuItem value=\"3\">V3</MenuItem>\r\n                      <MenuItem value=\"4\">V4</MenuItem>\r\n                      <MenuItem value=\"5\">V5</MenuItem>\r\n                      <MenuItem value=\"6\">V6</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                  <TextField\r\n                    required\r\n                    key={itemKey}\r\n                    id={`name-input-${itemKey}`}\r\n                    value={routerInfos[itemKey].color}\r\n                    label=\"顏色\"\r\n                    onChange={(event) => { this.handleRouteNameChange(itemKey, event.target.value) }}\r\n                  />\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className='ic-btn'\r\n                    onClick={() => { this.handleDeleteRoute(itemKey) }}\r\n                  ><DeleteIcon /></Button>\r\n                </div>\r\n              </CSSTransition>\r\n            }\r\n            )\r\n          }\r\n        </TransitionGroup>\r\n        <Link to=\"/OptionStart/start\" onClick={() => this.handleNextRoute()}>\r\n          <Button variant=\"contained\" color=\"primary\">\r\n            確定 &gt;\r\n          </Button>\r\n        </Link>\r\n      </Fragment>\r\n    )\r\n  }\r\n}","import React, { Component, Fragment } from 'react';\r\nimport rock from \"../../assest/images/rock.jpg\"\r\nimport _ from 'lodash';\r\nimport './style.scss'\r\nimport { createMuiTheme, ThemeProvider, withStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport blueGrey from '@material-ui/core/colors/blueGrey';\r\nimport { routerGoalModel, routerGoalStatusEnum, userAccountModel } from '../Main';\r\n\r\nconst blueGreycolor = blueGrey[800]\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: blueGrey,\r\n  },\r\n});\r\n\r\nconst useStyles = (theme: any) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 180,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n});\r\n\r\nclass OptionStartGoal extends Component<any, any> {\r\n  constructor(props: any) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      userAccount: [],\r\n      test: true,\r\n      routerCount: 8,\r\n      initAccountRouterGoal: [],\r\n      selectName: '百八',\r\n      selectRouterNum: 1,\r\n      selectRouterStatus: '1',\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.initAccount();\r\n  }\r\n\r\n  initAccount() {\r\n    this.initRouterGoal();\r\n  }\r\n\r\n  // 初始化所有選手的路線資訊\r\n  initRouterGoal() {\r\n    let routeInfos = JSON.parse(sessionStorage.getItem('routerInfos') || '{}')\r\n    let routerGoalAccounts =  JSON.parse(sessionStorage.getItem('routerGoalAccounts') || '{}')\r\n    console.log('routeInfos', routeInfos);\r\n    let initRouterGoalModel: routerGoalModel[] = [];\r\n    _.each(routeInfos, (routeInfo, index) => { \r\n      initRouterGoalModel.push({ number: Number(index) + 1, name: `V${routeInfo.level} ${routeInfo.color}`, status: routerGoalStatusEnum.NONE })}\r\n    )\r\n\r\n    console.log('initRouterGoalModel', initRouterGoalModel);\r\n    this.setState({userAccount: _.map(routerGoalAccounts, account => ({\r\n      ...account,\r\n      routerGoal: _.cloneDeep(initRouterGoalModel)\r\n    })),\r\n    initAccountRouterGoal: initRouterGoalModel\r\n  })\r\n  }\r\n\r\n  //切換 focusID 讓畫面Focus 當前 focusUnitId 的單位\r\n  handleNameChange = (event: any) => {\r\n    this.setState({ selectName: event.target.value })\r\n  };\r\n\r\n  handleRouterNumChange = (event: any) => {\r\n    this.setState({ selectRouterNum: event.target.value })\r\n  };\r\n\r\n  handleStatusChange = (event: any) => {\r\n    this.setState({ selectRouterStatus: event.target.value })\r\n  };\r\n\r\n  handleConfirmClick = () => {\r\n    const { userAccount, selectName, selectRouterNum, selectRouterStatus } = this.state\r\n    let findAccount: userAccountModel = _.find(userAccount, account => (account.name === selectName));\r\n    if (!_.isEmpty(findAccount)) {\r\n      let findRouter = _.find(findAccount.routerGoal, routerGoal => (routerGoal.number === selectRouterNum));\r\n      if (findRouter !== undefined && Number(selectRouterStatus) > Number(findRouter.status)) {\r\n        findRouter.status = selectRouterStatus;\r\n      }\r\n      switch (selectRouterStatus) {\r\n        case routerGoalStatusEnum.NONE:\r\n          findAccount.startAtt += 1;\r\n          break;\r\n        case routerGoalStatusEnum.ZONE_1:\r\n          findAccount.startAtt += 1;\r\n          findAccount.zone1Att += 1;\r\n          break;\r\n        case routerGoalStatusEnum.ZONE_2:\r\n          findAccount.startAtt += 1;\r\n          findAccount.zone1Att += 1;\r\n          findAccount.zone2Att += 1;\r\n          break;\r\n        case routerGoalStatusEnum.TOP:\r\n          findAccount.startAtt += 1;\r\n          findAccount.zone1Att += 1;\r\n          findAccount.zone2Att += 1;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      //重新計算成員的攀點數\r\n      let topCount = 0;\r\n      let zone2Count = 0;\r\n      let zone1Count = 0;\r\n      _.each(findAccount.routerGoal, routerGoal => {\r\n        switch (routerGoal.status) {\r\n          case routerGoalStatusEnum.ZONE_1:\r\n            zone1Count += 1;\r\n            break;\r\n          case routerGoalStatusEnum.ZONE_2:\r\n            zone2Count += 1;\r\n            break;\r\n          case routerGoalStatusEnum.TOP:\r\n            topCount += 1;\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n      console.log(topCount, zone2Count, zone1Count);\r\n      findAccount.topCount = topCount;\r\n      findAccount.zone2Count = zone2Count;\r\n      findAccount.zone1Count = zone1Count;\r\n      console.log(findAccount);\r\n      console.log(userAccount);\r\n      this.setState({ userAccount: userAccount });\r\n      this.setWhoWin();\r\n      // alert('成功');\r\n    }\r\n  }\r\n\r\n  //計算是誰贏\r\n  setWhoWin() {\r\n    const { userAccount } = this.state\r\n    let orderAccount = _.orderBy(userAccount, ['topCount', 'zone2Count', 'zone1Count'], ['desc', 'desc', 'desc'])\r\n    this.setState({ userAccount: orderAccount });\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { userAccount, selectName, routerCount, selectRouterNum, selectRouterStatus, initAccountRouterGoal } = this.state\r\n    return (\r\n      <div>\r\n        <div>\r\n          <FormControl variant=\"filled\" className={classes.formControl}>\r\n            <InputLabel id=\"select-anme\">人員</InputLabel>\r\n            <Select\r\n              labelId=\"select-anme\"\r\n              id=\"select-anme\"\r\n              value={selectName}\r\n              onChange={this.handleNameChange}\r\n            >\r\n              {\r\n                _.map(userAccount, account => (\r\n                  <MenuItem value={account.name}>{account.name}</MenuItem>\r\n                ))\r\n              }\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n        <div>\r\n          <FormControl variant=\"filled\" className={classes.formControl}>\r\n            <InputLabel id=\"select-router\">路線</InputLabel>\r\n            <Select\r\n              labelId=\"select-router\"\r\n              id=\"select-router\"\r\n              value={selectRouterNum}\r\n              onChange={this.handleRouterNumChange}\r\n            >\r\n              {\r\n                _.map(initAccountRouterGoal, route => (\r\n                  <MenuItem value={route.number}>{route.name}</MenuItem>\r\n                ))\r\n              }\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n        <div>\r\n          <FormControl variant=\"filled\" className={classes.formControl}>\r\n            <InputLabel id=\"select-anme\">成績</InputLabel>\r\n            <Select\r\n              labelId=\"select-anme\"\r\n              id=\"select-anme\"\r\n              value={selectRouterStatus}\r\n              onChange={this.handleStatusChange}\r\n            >\r\n              <MenuItem value=\"4\">TOP</MenuItem>\r\n              <MenuItem value=\"3\">ZONE_2</MenuItem>\r\n              <MenuItem value=\"2\">ZONE_1</MenuItem>\r\n              <MenuItem value=\"1\">失敗</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n        <ThemeProvider theme={theme}>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={this.handleConfirmClick}>\r\n            送出\r\n          </Button>\r\n        </ThemeProvider>\r\n        <div className=\"left\">\r\n          <span className=\"md-title w-70\">名子</span>\r\n          <span className=\"w-35\">TOP</span>\r\n          <span className=\"w-35\">Z2</span>\r\n          <span className=\"w-35\">Z1</span>\r\n          <span className=\"w-35\">Z2t</span>\r\n          <span className=\"w-35\">Z1t</span>\r\n          <span className=\"w-35\">次數</span>\r\n        </div>\r\n        <div className=\"left\">\r\n          {\r\n            _.map(userAccount, account => (\r\n              <div>\r\n                <span className=\"md-title  w-70\">{account.name}</span>\r\n                <span className=\"w-35\">{account.topCount} </span>\r\n                <span className=\"w-35\">{account.zone2Count} </span>\r\n                <span className=\"w-35\">{account.zone1Count} </span>\r\n                <span className=\"w-35\">{account.zone2Att}  </span>\r\n                <span className=\"w-35\">{account.zone1Att}  </span>\r\n                <span className=\"w-35\">{account.startAtt}  </span>\r\n              </div>\r\n            ))\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(OptionStartGoal)","import React, { Component, Fragment } from 'react';\r\nimport _ from 'lodash';\r\nimport './style.scss'\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport blueGrey from '@material-ui/core/colors/blueGrey';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport { initRouteGoalAccount, initRouteGoal } from '../../utility/lib/common';\r\nimport SetPerson from '../SetPerson';\r\nimport SetRoute from '../SetRoute';\r\nimport OptionStartGoal from '../OptionStartGoal';\r\n\r\nconst blueGreycolor = blueGrey[800]\r\n\r\nconst startTheme = createMuiTheme({\r\n  palette: {\r\n    success: {\r\n      main: '#4caf50',\r\n      light: '#81c784',\r\n      dark: '#388e3c',\r\n    }\r\n  },\r\n});\r\n\r\n\r\nexport default class OptionStart extends Component<any, any> {\r\n  constructor(props: any) {\r\n    super(props)\r\n\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  render() {\r\n    let location = this.props.location;\r\n    let { path } = this.props.match;\r\n    return (\r\n      <div>\r\n        <ThemeProvider theme={startTheme}>\r\n          <Switch location={location}>\r\n            <Route path={`${path}/settingPerson`}>\r\n              <SetPerson/>\r\n            </Route>\r\n            <Route path={`${path}/settingRoute`}>\r\n              <SetRoute/>\r\n            </Route>\r\n            <Route path={`${path}/start`}>\r\n              <OptionStartGoal/>\r\n            </Route>\r\n          </Switch>\r\n        </ThemeProvider>\r\n      </div>\r\n    )\r\n  }\r\n}","import logo from './logo.svg';\nimport './App.css';\nimport rock from \"./assest/images/rock.jpg\"\nimport { Index } from './pages/Index/index'\nimport OptionStart from './pages/OptionStart/index'\nimport Main from './pages/Main/index'\nimport {\n  TransitionGroup,\n  CSSTransition\n} from \"react-transition-group\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useLocation\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router basename=\"/rock-goal/build\">\n      <div className=\"App\">\n        <div className=\"rock-bg\">\n          <Switch>\n            <Route path=\"*\">\n              <AnimationApp />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nfunction AnimationApp() {\n  let location = useLocation();\n  return (\n    <TransitionGroup>\n      <CSSTransition\n        key={location.key}\n        classNames=\"page-fade\"\n        timeout={300}\n        unmountOnExit\n      >\n        <Switch location={location}>\n          <Route exact path=\"/\" component={Index}>\n            {/* <Index /> */}\n          </Route>\n          <Route path=\"/quikStart\" component={Main}>\n          </Route>\n          <Route path=\"/optionStart\" component={OptionStart}>\n          </Route>\n        </Switch>\n      </CSSTransition>\n    </TransitionGroup>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}